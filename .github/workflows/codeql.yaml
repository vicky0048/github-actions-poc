name: Build maven project
###

on: 
  push:
    branches: 
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CURRENT_VERSION: 0.0.1
      CURRENT_VERSION_1: "$new_version"
    
    strategy:
      fail-fast: false
      matrix:
        # Override automatic language detection by changing the below list
        # Supported options are ['csharp', 'cpp', 'go', 'java', 'javascript', 'python']
        language: ['java']
    
    steps:
    - name: Increment version
      id: version
      run: |
        new_version=$(echo $CURRENT_VERSION | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
        echo "::set-output name=new_version::$new_version"
        env:
           CURRENT_VERSION:"new_version"
        

    - name: Use new version
      run: |
        echo "New version is ${{steps.version.outputs.new_version}}"
        run: echo $CURRENT_VERSION
   # - name: Print workflow number
   #   run: |
   #       echo "Workflow run number: ${{ github.run_number }}"
   #       echo "Branch name: ${{ github.event.ref }}"
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Setup Java
      uses: actions/setup-java@v1
      with:
        java-version: 11
        
   # - name: Increment version
   #   run: mvn versions:set -DnewVersion=$(date +%H.%M.%S)-SNAPSHOT   
    
    - name: Build with Maven
      run: mvn clean install
    
    - name: Get versions
      run: mvn help:evaluate -Dexpression=project.version

    - name: Get release version
      run: mvn help:evaluate -Dexpression=project.version | grep -v SNAPSHOT
      id: release-version

    - name: Get snapshot version
      run: mvn help:evaluate -Dexpression=project.version | grep SNAPSHOT
      id: snapshot-version  
      
   # - name: ser variable for backup folder
   #   run: echo "R1=R1.0" >> $GITHUB_ENV
    
   # - name: create directory
   #   run: mkdir -p target/$R1
      
    - name: Get snapshot version
      run: |
         echo $(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | grep SNAPSHOT|  sed 's/-SNAPSHOT//') > snapshot.txt 

      
    - name: print snapshot version
      run: |
        echo "springboot-images-new-$(cat snapshot.txt).jar"
        mkdir -p $(cat snapshot.txt)
        cp -r snapshot.txt target
        mv $(cat snapshot.txt) target
        ls -lrth
        cd target && mv springboot-images-new.jar springboot-images-new-$(cat snapshot.txt).jar 
        mv springboot-images-new-$(cat snapshot.txt).jar  $(cat snapshot.txt)
        cd $(cat snapshot.txt) && ls -lrth
        
        
        
        
    - name: current file
      run: |
       cd target/$(cat snapshot.txt) 
       ls -lrth 
       pwd
       
    
      
  
        
        
        
        
        
        
