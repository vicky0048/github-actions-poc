name: Build maven project
#######

on: 
  push:
    branches: 
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      JFROG_REPO_URL: https://vicky123.jfrog.io/artifactory/maven-repo/
      #ARTIFACT_PATH: maven-repo/$(cat snapshot.txt)/
      JFROG_REPOSITORY: maven-repo
      
    
    strategy:
      fail-fast: false
      matrix:
        # Override automatic language detection by changing the below list
        # Supported options are ['csharp', 'cpp', 'go', 'java', 'javascript', 'python']
        language: ['java']
    
    steps:
    #- name: Get latest artifact version
    #  id: get_artifact_version
    #  run: |
    #     current_version=$(curl -s -u ${{ secrets.JF_USER }}:${{ secrets.JF_PASSWORD }} "https://vicky123.jfrog.io/artifactory/api/storage/maven-repo/0.0.1/?lastModified" | jq '.uri' | awk -F'[/"]' '{ print $(NF-1); }' | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')
    #     #res1=echo $(curl -s -u ${{ secrets.JF_USER }}:${{ secrets.JF_PASSWORD }} "https://vicky123.jfrog.io/artifactory/api/storage/maven-repo/0.0.1/?lastModified") | jq '.uri' | awk -F'[/"]' '{ print $(NF-1); }' | grep -oE '[0-9]+\.[0-9]+\.[0-9]+'
    #     echo $current_version
    #     new_version=$(echo $current_version | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
    #     echo $new_version > version.txt
    #     echo $(cat version.txt)
    #     pwd
    #     ls -lrth
        
      
   
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Setup Java
      uses: actions/setup-java@v1
      with:
        java-version: 11
         
    
    - name: Build with Maven
      run: mvn clean install
    
    - name: Get versions
      run: mvn help:evaluate -Dexpression=project.version

    - name: Get release version
      run: mvn help:evaluate -Dexpression=project.version | grep -v SNAPSHOT
      id: release-version

    - name: Get snapshot version
      run: mvn help:evaluate -Dexpression=project.version | grep SNAPSHOT
      id: snapshot-version  
    
   # - name: create directory
   #   run: mkdir -p target/$R1
      
    - name: Get snapshot version
      run: |
         echo $(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | grep SNAPSHOT|  sed 's/-SNAPSHOT//') > snapshot.txt 

      
    - name: print snapshot version
      run: |
        pwd
        ls -lrth
        curl -X PUT -u ${{ secrets.JF_USER }}:${{ secrets.JF_PASSWORD }} https://vicky123.jfrog.io/artifactory/maven-repo/$(cat snapshot.txt)/
        current_version=$(curl -s -u ${{ secrets.JF_USER }}:${{ secrets.JF_PASSWORD }} "https://vicky123.jfrog.io/artifactory/api/storage/maven-repo/$(cat snapshot.txt)/?lastModified" | jq '.uri' | awk -F'[/"]' '{ print $(NF-1); }')
        #echo $(curl -s -u ${{ secrets.JF_USER }}:${{ secrets.JF_PASSWORD }} "https://vicky123.jfrog.io/artifactory/api/storage/maven-repo/0.0.2/?lastModified" | jq '.uri' | awk -F'[/"]' '{ print $(NF-1); }' | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')
        if [ "$current_version" == null ];
        then
            echo "No artifacts found. Using default version."
            echo "$current_version"
            default_version=$(cat snapshot.txt)
            default_version=$(echo $default_version | sed 's/\.[0-9]*$/\.1/')
            echo "$default_version" > snapshot1.txt
            echo "$(cat snapshot1.txt)"
            echo "$(cat snapshot.txt)"
            cp -r snapshot1.txt target  
            cd target && mv springboot-images-new.jar springboot-images-new-$(cat snapshot1.txt).jar 
            curl -X PUT -u ${{ secrets.JF_USER }}:${{ secrets.JF_PASSWORD }} -T springboot-images-new-$(cat snapshot1.txt).jar  https://vicky123.jfrog.io/artifactory/maven-repo/$(cat snapshot.txt)/    
        else
           current_version=$(curl -s -u ${{ secrets.JF_USER }}:${{ secrets.JF_PASSWORD }} "https://vicky123.jfrog.io/artifactory/api/storage/maven-repo/$(cat snapshot.txt)/?lastModified" | jq '.uri' | awk -F'[/"]' '{ print $(NF-1); }' | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')
           echo found_version
           echo "$current_version"
        new_version=$(echo $current_version | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
        echo $new_version > version.txt
        echo $(cat version.txt)
        ls -lrth
        echo "springboot-images-new-$(cat version.txt).jar"
        #mkdir -p $(cat snapshot.txt)
        cp -r snapshot.txt target
        cp -r version.txt target
        #mv $(cat snapshot.txt) target
        cd target && mv springboot-images-new.jar springboot-images-new-$(cat version.txt).jar 
        ls -lrth
        #mv springboot-images-new-$(cat snapshot.txt).jar  $(cat snapshot.txt)
        #cd $(cat snapshot.txt) && ls -lrth
        echo $(cat snapshot.txt)
        curl -X PUT -u ${{ secrets.JF_USER }}:${{ secrets.JF_PASSWORD }} -T springboot-images-new-$(cat version.txt).jar  https://vicky123.jfrog.io/artifactory/maven-repo/$(cat snapshot.txt)/
        fi
        
      
      
  
        
        
        
        
        
        
